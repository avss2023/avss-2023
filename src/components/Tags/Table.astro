---
export interface Row {
  items: string[];
  title?: boolean;
  bold?: boolean;
  updated?: string;
}
interface Props {
  rows: Row[];
}
const { rows } = Astro.props as Props;
---

<figure class="mt-4 w-full max-w-[100%] overflow-x-scroll border-gray-800">
  <table class="w-full table-auto text-xl">
    <tbody class="border-2">
      {
        rows.map(({ items, title, bold, updated }) => {
          return (
            <tr
              class={
                "border-y-2 border-gray-800" +
                (title
                  ? " bg-gray-600 font-bold text-gray-100"
                  : " odd:bg-gray-300") +
                (bold ? " font-bold" : "")
              }
            >
              {items.map((item) => {
                if (updated && (Date.parse(item).toString() !== "NaN")) {
                  return (
                    <td class="border-x-2 border-gray-800 px-4 py-4 text-center">
                      <p>{updated}</p>
                      <s class="decoration-red-600">{item}</s>
                    </td>
                  );
                }
                return (
                  <td class="border-x-2 border-gray-800 px-4 py-4 text-center">
                    {item}
                  </td>
                );
              })}
            </tr>
          );
        })
      }
    </tbody>
  </table>
</figure>
