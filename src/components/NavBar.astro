---
import { Image } from "@astrojs/image/components";
---

<nav
  class="navbar mx-auto flex w-full max-w-7xl flex-col px-10 py-4 lg:flex-row"
>
  <div class="flex items-center justify-between">
    <div
      class="w-20 flex-shrink-0 rounded-lg p-2 outline-neutral-200 transition-shadow duration-300 ease-in-out hover:shadow-lg hover:outline"
    >
      <a href="/">
        <Image
          src="/logo.png"
          alt="logo of AVSS 2023"
          width="64"
          aspectRatio="64âˆ¶49"
          format="webp"
          quality={100}
        />
      </a>
    </div>
    <div
      data-open="false"
      class="menu-btn h-10 w-10 cursor-pointer rounded-lg p-1 text-white outline-neutral-200 transition-shadow duration-300 ease-in-out hover:shadow-lg hover:outline lg:hidden"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="currentColor"
        class="close-icon hidden h-8 w-8 lg:hidden"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="currentColor"
        class="menu-icon h-8 w-8 lg:hidden"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
      </svg>
    </div>
  </div>
  <ul
    class="navlist hidden grow flex-col items-center justify-end gap-6 py-4 font-bold text-white lg:flex lg:flex-row"
  >
    <li data-item="1">
      <a class="hover:underline" href="news">News</a>
    </li>
    <li data-item="2">
      <a class="hover:underline" href="organization">Organization</a>
    </li>
    <li data-item="3">
      <a class="hover:underline" href="program">Program</a>
    </li>
    <li data-item="4">
      <a class="hover:underline" href="calls">Calls</a>
    </li>
    <li data-item="5">
      <a class="hover:underline" href="submission">Submission</a>
    </li>
    <li data-item="6">
      <a class="hover:underline" href="information">Information</a>
    </li>
    <li data-item="7">
      <a class="hover:underline" href="attend">Attend</a>
    </li>
    <li data-item="8">
      <a class="hover:underline" href="sponsors">Sponsors</a>
    </li>
    <li data-item="9">
      <a class="hover:underline" href="contact">Contact</a>
    </li>
  </ul>

  <script>
    const navbar = document.querySelector(".navbar") as HTMLElement;
    const navList = document.querySelector(".navlist") as HTMLElement;
    const menuBtn = document.querySelector(".menu-btn") as HTMLElement;
    const menuIcon = document.querySelector(".menu-icon") as HTMLElement;
    const closeIcon = document.querySelector(".close-icon") as HTMLElement;
    /* const listItems = document.querySelectorAll(
      "[data-item]"
    ) as NodeListOf<HTMLElement>; */
    const isOpen = () => menuBtn.dataset.open;

    const resetAnimation = () => {
      menuIcon.classList.remove("disappear", "appear");
      closeIcon.classList.remove("disappear", "appear");
      navList.classList.remove("rollup", "rolldown");
      navbar.classList.remove("blur-in", "blur-out");
    };

    const toggleOpenState = () => {
      resetAnimation();

      // the only dependency of this animation is isOpen state
      menuBtn.dataset.open = isOpen() === "false" ? "true" : "false";

      if (isOpen() === "true") menuIcon.classList.add("disappear");
      else closeIcon.classList.add("disappear");
    };

    const menuIconAnimation = () => {
      if (isOpen() === "true") {
        menuIcon.classList.add("hidden");
        closeIcon.classList.remove("hidden");
        closeIcon.classList.add("appear");
        navbar.classList.add("blur-in");
      }
      menuIcon.classList.remove("disappear", "appear");
      closeIcon.classList.remove("disappear");
    };

    const closeIconAnimation = () => {
      if (isOpen() === "false") {
        closeIcon.classList.add("hidden");
        menuIcon.classList.remove("hidden");
        menuIcon.classList.add("appear");
        navList.classList.add("rollup");
      }
      closeIcon.classList.remove("disappear", "appear");
      menuIcon.classList.remove("disappear");
    };

    const navbarAnimation = (e: AnimationEvent) => {
      if (e.animationName === "blur") {
        if (isOpen() === "true") {
          navbar.classList.add("backdrop-blur", "bg-neutral-800/80");
          navList.classList.add("flex", "rolldown");
          navList.classList.remove("hidden");
        } else {
          navbar.classList.remove(
            "blur-out",
            "backdrop-blur",
            "bg-neutral-800/80"
          );
        }
      }
    };

    const navListAnimation = (e: AnimationEvent) => {
      if (e.animationName === "rolldown") {
        if (isOpen() === "true") {
        } else {
          navList.classList.add("hidden");
          navList.classList.remove("flex");
          navbar.classList.add("blur-out");
        }
      }
    };

    menuBtn.addEventListener("click", toggleOpenState);
    menuIcon.addEventListener("animationend", menuIconAnimation);
    closeIcon.addEventListener("animationend", closeIconAnimation);
    navbar.addEventListener("animationend", navbarAnimation);
    navList.addEventListener("animationend", navListAnimation);
  </script>
</nav>

<style>
  @keyframes appear {
    0% {
      display: none;
      scale: 0.8;
      opacity: 0;
    }
    10% {
      display: block;
      scale: 0.8;
      opacity: 0;
    }
    90% {
      scale: 1.1;
      opacity: 1;
    }
    100% {
      scale: 1;
      opacity: 1;
    }
  }
  @keyframes rolldown {
    0% {
      opacity: 0;
      transform: translateY(-8px);
    }
    80% {
      opacity: 0.8;
      transform: translateY(3px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes blur {
    0% {
      background-color: inherit;
      backdrop-filter: blur(0px);
      height: 100px;
    }
    100% {
      background-color: #262626cc;
      backdrop-filter: blur(8px);
      height: 538px;
    }
  }

  .appear {
    animation: appear 0.1s ease-in forwards;
  }
  .disappear {
    animation: appear 0.1s ease-in reverse forwards;
  }
  .blur-in {
    animation: blur 0.2s ease forwards;
  }
  .blur-out {
    animation: blur 0.2s ease reverse forwards;
  }
  .rolldown {
    animation: rolldown 0.2s ease-in forwards;
  }
  .rollup {
    animation: rolldown 0.1s ease-in reverse forwards;
  }
</style>
