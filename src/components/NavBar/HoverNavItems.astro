---
import type { NavItem } from "./NavItems.astro";
interface Props {
  itemHover?: NavItem[];
}
const { itemHover } = Astro.props as Props;

const hasHover = itemHover && itemHover.length > 0;

const mobileStyle = "ml-6 flex gap-y-6 flex-col pt-5 text-lg";
const innerStyle = "lg:py-4 lg:gap-y-4 lg:pt-4";
const desktopBeforeInteration = "lg:pointer-events-none lg:opacity-0";
const desktopAfterInteraction =
  "lg:absolute lg:gap-y-4 lg:top-10 lg:left-12 lg:w-max lg:min-w-[16rem] lg:-translate-x-1/2 lg:rounded-lg lg:border-2 lg:bg-black/80 lg:px-8 lg:py-6 lg:shadow-lg";
const desktopTransitionProperty = `
  lg:group-focus-within:pointer-events-auto
  lg:group-focus-within:opacity-100
  lg:group-hover:pointer-events-auto
  lg:group-hover:opacity-100
  `;
const transition = "transition-opacity duration-200 ease-out";

const classNameHover = [
  mobileStyle,
  desktopBeforeInteration,
  desktopAfterInteraction,
  desktopTransitionProperty,
  transition,
].join(" ");

/**
 * TODO: Hover & Focus State
 * Manage a state that tracks the current hover/focus state of nav items.
 * I thought this would be better because the pop-up menu should only render
 * once, not twice. But I'm not sure how to do this.
 */
---

{
  hasHover && (
    <ul class={classNameHover}>
      {itemHover.map((hoverItem) => {
        return (
          <li>
            <a class="hover:underline" href={hoverItem.href}>
              {hoverItem.name}
            </a>
            {hoverItem.hover && (
              <ul class={mobileStyle + innerStyle}>
                {hoverItem.hover.map((item) => {
                  return (
                    <li>
                      <a class="hover:underline" href={item.href}>
                        {item.name}
                      </a>
                    </li>
                  );
                })}
              </ul>
            )}
          </li>
        );
      })}
    </ul>
  )
}
