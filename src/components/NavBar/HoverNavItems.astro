---
interface Props {
  itemHover:
    | {
        name: string;
        href: string;
      }[]
    | undefined;
}
const { itemHover } = Astro.props as Props;

const hasHover = itemHover && itemHover.length > 0;

const groupBreakPoint = "lg";
const groupSelectors = ["group-hover", "group-focus-within"];
const groupBehaviors = ["pointer-events-auto", "block", "opacity-100"];
const prefixes = groupSelectors.map((behavior) => {
  return `${groupBreakPoint}:${behavior}`;
});

const blockStyle =
  "absolute top-10 left-12 w-56 -translate-x-1/2 rounded-lg border-2 bg-black/80 px-4 py-3 shadow-lg";
const groupBehaviorBefore = "pointer-events-none opacity-0";
const groupBehaviorAfter = prefixes
  .map((prefix) => {
    return groupBehaviors
      .map((behavior) => {
        return `${prefix}:${behavior} `;
      })
      .join(" ");
  })
  .join(" ");
const transition = "transition-opacity duration-200 ease-out";

const classNameHover = [
  blockStyle,
  groupBehaviorBefore,
  groupBehaviorAfter,
  transition,
].join(" ");

/**
 * TODO: Hover & Focus State
 * Manage a state that tracks the current hover/focus state of nav items.
 * I thought this would be better because the pop-up menu should only render
 * once, not twice. But I'm not sure how to do this.
 */
---

{
  hasHover && (
    <ul class={classNameHover}>
      {itemHover.map((hoverItem) => {
        return (
          <li class="my-2">
            <a class="hover:underline" href={hoverItem.href}>
              {hoverItem.name}
            </a>
          </li>
        );
      })}
    </ul>
  )
}
